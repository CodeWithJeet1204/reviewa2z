import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useQuery } from '@tanstack/react-query';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Search, ChevronRight, Star, Shield, Bot, CircleArrowRight } from 'lucide-react';
import Navbar from '@/components/Navbar';
import Footer from '@/components/Footer';
import ReviewCard from '@/components/ReviewCard';
import { cn } from '@/lib/utils';
import { supabase } from '@/lib/supabase';

const HeroSection = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const navigate = useNavigate();

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      navigate(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
    }
  };

  return (
    <div className="relative bg-gradient-to-b from-blue-50 to-transparent dark:from-gray-900 min-h-[90vh] flex items-center">
      <div className="container px-4 md:px-6 mx-auto pt-32 pb-16">
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
          <div className="space-y-8 staggered-fade">
            <div className="space-y-4">
              <h1 className="text-4xl font-bold tracking-tighter sm:text-5xl md:text-6xl">
                AI-Powered Reviews <br />
                <span className="text-primary">You Can Trust</span>
              </h1>
              <p className="max-w-[600px] text-muted-foreground md:text-xl">
                Discover unbiased, data-driven reviews generated by advanced AI. No human bias, just factual analysis.
              </p>
            </div>
            
            <div className="flex flex-col sm:flex-row gap-4">
              <Button size="lg" className="transition-all duration-300 hover:scale-[1.02]" asChild>
                <Link to="/search">
                  <Search className="mr-2 h-5 w-5" /> Explore Reviews
                </Link>
              </Button>
              <Button variant="outline" size="lg" asChild>
                <Link to="/about">
                  How It Works <ChevronRight className="ml-2 h-5 w-5" />
                </Link>
              </Button>
            </div>
            
            <div className="flex items-center space-x-4">
              <div className="flex -space-x-2">
                <div className="h-9 w-9 rounded-full bg-primary/20 flex items-center justify-center">
                  <Star className="h-5 w-5 text-primary" />
                </div>
                <div className="h-9 w-9 rounded-full bg-primary/20 flex items-center justify-center">
                  <Shield className="h-5 w-5 text-primary" />
                </div>
                <div className="h-9 w-9 rounded-full bg-primary/20 flex items-center justify-center">
                  <Bot className="h-5 w-5 text-primary" />
                </div>
              </div>
              <p className="text-sm text-muted-foreground">
                Trusted by <span className="font-medium text-foreground">10,000+</span> users
              </p>
            </div>
          </div>
          
          <div className="relative">
            <div className="absolute -inset-0.5 bg-gradient-to-r from-primary to-blue-400 rounded-xl blur-xl"></div>
            <div className="relative glass rounded-xl overflow-hidden shadow-xl p-2 animate-fade-in">
              <img 
                src="https://images.unsplash.com/photo-1521791055366-0d553872125f?ixlib=rb-4.0.3&auto=format&fit=crop&w=1000&q=80" 
                alt="AI Review Process" 
                className="rounded-lg w-full h-full object-cover"
              />
              <div className="absolute bottom-0 left-0 right-0 glass p-4 backdrop-blur-md">
                <div className="flex items-center justify-between">
                  <div>
                    <Badge className="mb-2">New Review</Badge>
                    <h3 className="font-medium">MacBook Pro M3 Max</h3>
                  </div>
                  <div className="flex text-yellow-400">
                    {[...Array(5)].map((_, i) => (
                      <Star key={i} className="h-4 w-4 fill-yellow-400" />
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <div className="hidden md:block absolute top-1/4 right-0 h-64 w-64 bg-primary/5 rounded-full blur-3xl"></div>
      <div className="hidden md:block absolute bottom-1/4 left-0 h-96 w-96 bg-blue-400/5 rounded-full blur-3xl"></div>
    </div>
  );
};

const SearchSection = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const navigate = useNavigate();

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      navigate(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
    }
  };

  return (
    <div className="container px-4 md:px-6 mx-auto py-12">
      <div className="glass mx-auto max-w-4xl p-8 rounded-xl shadow-sm">
        <div className="space-y-6">
          <div className="text-center space-y-2">
            <h2 className="text-2xl font-semibold">Find the Perfect Product</h2>
            <p className="text-muted-foreground">Search for AI-generated reviews across all categories</p>
          </div>
          
          <form onSubmit={handleSearch} className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-muted-foreground" />
            <Input 
              placeholder="Search for products, brands, or categories..." 
              className="pl-10 py-6 text-base"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
            />
          </form>
          
          <div>
            <p className="mb-3 text-sm text-muted-foreground">Popular searches:</p>
            <div className="flex flex-wrap gap-2">
              {["Smartphones", "Laptops", "Headphones", "Smart Home", "Gaming", "Fitness Trackers"].map((term, i) => (
                <Badge 
                  key={i} 
                  variant="secondary" 
                  className="cursor-pointer hover:bg-secondary/80 transition-colors"
                  onClick={() => navigate(`/search?q=${encodeURIComponent(term)}`)}
                >
                  {term}
                </Badge>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

const FeaturedReviewsSection = () => {
  const { data: featuredReviews, isLoading } = useQuery({
    queryKey: ['featuredReviews'],
    queryFn: async () => {
      const { data, error } = await supabase
        .from('reviews')
        .select('id, title, slug, category_id, image_url, rating, brief, likes_count, comments_count, tags')
        .eq('is_featured', true)
        .order('created_at', { ascending: false })
        .limit(6);
      
      if (error) throw error;
      return data;
    },
    staleTime: 60000,
    refetchOnWindowFocus: false,
  });

  return (
    <div className="container px-4 md:px-6 mx-auto py-12">
      <div className="space-y-2 text-center mb-10">
        <h2 className="text-3xl font-bold tracking-tight">Featured Reviews</h2>
        <p className="text-muted-foreground max-w-[700px] mx-auto">
          Discover our latest AI-generated reviews across popular categories
        </p>
      </div>
      
      {isLoading ? (
        <div className="text-center py-12">
          <div className="w-12 h-12 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-xl font-medium">Loading reviews...</p>
        </div>
      ) : featuredReviews && featuredReviews.length > 0 ? (
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {featuredReviews.map((review) => (
            <div key={review.id} className="animate-fade-in" style={{ animationDelay: `${parseInt(review.id.slice(0, 8), 16) % 300}ms` }}>
              <ReviewCard {...review} />
            </div>
          ))}
        </div>
      ) : (
        <div className="text-center py-12">
          <p className="text-muted-foreground">No featured reviews available at the moment.</p>
        </div>
      )}
      
      <div className="mt-12 text-center">
        <Button asChild>
          <Link to="/search">
            View All Reviews <ChevronRight className="ml-2 h-5 w-5" />
          </Link>
        </Button>
      </div>
    </div>
  );
};

const CategoriesSection = () => {
  const { data: categories, isLoading } = useQuery({
    queryKey: ['homeCategories'],
    queryFn: async () => {
      const { data, error } = await supabase
        .from('categories')
        .select('id, name, slug, icon')
        .order('name')
        .limit(8);
      
      if (error) throw error;
      
      const { data: reviewCounts, error: countError } = await supabase
        .from('reviews')
        .select('category_id, count')
        .count()
        .group('category_id');
      
      if (countError) throw countError;
      
      const countsMap = reviewCounts?.reduce((acc, item) => {
        acc[item.category_id] = item.count;
        return acc;
      }, {}) || {};
      
      return data.map(category => ({
        ...category,
        count: countsMap[category.id] || 0
      }));
    },
    staleTime: 60000,
    refetchOnWindowFocus: false,
  });

  return (
    <div className="bg-secondary/50 py-16">
      <div className="container px-4 md:px-6 mx-auto">
        <div className="space-y-2 text-center mb-10">
          <h2 className="text-3xl font-bold tracking-tight">Browse by Category</h2>
          <p className="text-muted-foreground max-w-[700px] mx-auto">
            Find AI-generated reviews in your preferred product categories
          </p>
        </div>
        
        {isLoading ? (
          <div className="text-center py-12">
            <div className="w-12 h-12 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
            <p className="text-xl font-medium">Loading categories...</p>
          </div>
        ) : categories && categories.length > 0 ? (
          <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4">
            {categories.map((category) => (
              <Link 
                to={`/category/${category.slug}`}
                key={category.id} 
                className={cn(
                  "group glass flex items-center p-4 rounded-xl transition-all duration-300",
                  "hover:shadow-md hover:scale-[1.02]"
                )}
              >
                <div className="w-10 h-10 flex items-center justify-center rounded-full bg-primary/10 mr-3 text-xl">
                  {category.icon || '📦'}
                </div>
                <div>
                  <h3 className="font-medium group-hover:text-primary transition-colors">{category.name}</h3>
                  <p className="text-sm text-muted-foreground">{category.count} reviews</p>
                </div>
              </Link>
            ))}
          </div>
        ) : (
          <div className="text-center py-12">
            <p className="text-muted-foreground">No categories available at the moment.</p>
          </div>
        )}
        
        {categories && categories.length > 0 && (
          <div className="mt-10 text-center">
            <Button variant="outline" asChild>
              <Link to="/categories">
                View All Categories <ChevronRight className="ml-2 h-5 w-5" />
              </Link>
            </Button>
          </div>
        )}
      </div>
    </div>
  );
};

const HowItWorksSection = () => (
  <div className="container px-4 md:px-6 mx-auto py-16">
    <div className="space-y-2 text-center mb-12">
      <h2 className="text-3xl font-bold tracking-tight">How ReviewsA2Z Works</h2>
      <p className="text-muted-foreground max-w-[700px] mx-auto">
        We leverage advanced AI to create unbiased, data-driven reviews
      </p>
    </div>
    
    <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
      {[
        {
          title: "Data Collection",
          description: "Our AI gathers product specifications, customer feedback, and performance metrics from multiple sources.",
          icon: <Search className="h-8 w-8 text-primary" />,
        },
        {
          title: "AI Analysis",
          description: "Advanced algorithms analyze the data to identify strengths, weaknesses, and overall performance.",
          icon: <Bot className="h-8 w-8 text-primary" />,
        },
        {
          title: "Review Generation",
          description: "The AI creates a comprehensive, unbiased review with pros, cons, and detailed analysis.",
          icon: <Star className="h-8 w-8 text-primary" />,
        },
      ].map((step, i) => (
        <div 
          key={i}
          className="glass p-6 rounded-xl text-center transition-all duration-300 hover:shadow-md animate-fade-in"
          style={{ animationDelay: `${i * 200}ms` }}
        >
          <div className="mx-auto w-16 h-16 flex items-center justify-center rounded-full bg-primary/10 mb-4">
            {step.icon}
          </div>
          <h3 className="text-xl font-semibold mb-2">{step.title}</h3>
          <p className="text-muted-foreground">{step.description}</p>
        </div>
      ))}
    </div>
    
    <div className="mt-12 text-center">
      <Button variant="outline" asChild>
        <Link to="/about">
          Learn More About Our Process <ChevronRight className="ml-2 h-5 w-5" />
        </Link>
      </Button>
    </div>
  </div>
);

const CtaSection = () => (
  <div className="bg-primary/5 py-16">
    <div className="container px-4 md:px-6 mx-auto">
      <div className="glass rounded-xl p-8 sm:p-12 relative overflow-hidden">
        <div className="absolute -bottom-16 -right-16 h-64 w-64 bg-primary/10 rounded-full blur-2xl"></div>
        <div className="absolute -top-16 -left-16 h-64 w-64 bg-blue-400/10 rounded-full blur-2xl"></div>
        
        <div className="relative z-10 max-w-3xl">
          <h2 className="text-3xl sm:text-4xl font-bold tracking-tight mb-4">
            Ready to discover honest, AI-generated reviews?
          </h2>
          <p className="text-muted-foreground text-lg mb-8">
            Start exploring our extensive collection of unbiased product analyses and make informed decisions.
          </p>
          <div className="flex flex-col sm:flex-row gap-4">
            <Button size="lg" className="transition-all duration-300 hover:scale-[1.02]" asChild>
              <Link to="/search">
                <Search className="mr-2 h-5 w-5" /> Explore Reviews
              </Link>
            </Button>
            <Button variant="outline" size="lg" asChild>
              <Link to="/categories">
                Browse Categories <CircleArrowRight className="ml-2 h-5 w-5" />
              </Link>
            </Button>
          </div>
        </div>
      </div>
    </div>
  </div>
);

const Index = () => {
  return (
    <div className="min-h-screen flex flex-col">
      <Navbar />
      <main className="flex-1">
        <HeroSection />
        <SearchSection />
        <FeaturedReviewsSection />
        <CategoriesSection />
        <HowItWorksSection />
        <CtaSection />
      </main>
      <Footer />
    </div>
  );
};

export default Index;
